- name: Generate Access Token
  ansible.builtin.uri:
    body:
      client_id: rhsm-api
      grant_type: refresh_token
      refresh_token: "{{ offline_token }}"
    body_format: form-urlencoded
    method: POST
    url: "{{ redhat_sso_url }}"
  register: access_token

- name: Ensure auth Directory Exists
  ansible.builtin.file:
    mode: "0755"
    path: "{{ assisted_installer.artifact_directory }}/auth"
    state: directory

- name: Query Cluster Credentials
  ansible.builtin.uri:
    headers:
      Authorization: "Bearer {{ access_token.json.access_token }}"
    method: GET
    status_code: 200
    url: "{{ api_clusters_url + cluster_id }}/credentials"
  register: api_query_credentials_results

- name: Set Credentials Vars
  ansible.builtin.set_fact:
    _console_password: "{{ api_query_credentials_results.json.password }}"
    _console_url: "{{ api_query_credentials_results.json.console_url }}"
    _console_username: "{{ api_query_credentials_results.json.username }}"

- name: Pretty Print Credentials to Artifact Directory
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.template', 'templates/credentials.j2') }}"
    dest: "{{ assisted_installer.artifact_directory }}/auth/credentials"
    mode: "0600"

- name: Write kubeadmin-password to Artifact Directory
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.template', 'templates/kubeadmin-password.j2') }}"
    dest: "{{ assisted_installer.artifact_directory }}/auth/kubeadmin-password"
    mode: "0600"

- name: Query kubeconfig URL
  ansible.builtin.uri:
    headers:
      Authorization: "Bearer {{ access_token.json.access_token }}"
    method: GET
    status_code: 200
    url: "{{ api_clusters_url + cluster_id }}/downloads/credentials-presigned?file_name=kubeconfig"
  register: api_query_kubeconfig_url_results

- name: Write kubeconfig to Artifact Directory
  ansible.builtin.get_url:
    dest: "{{ assisted_installer.artifact_directory }}/auth/kubeconfig"
    mode: "0600"
    url: "{{ api_query_kubeconfig_url_results.json.url }}"
