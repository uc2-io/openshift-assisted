- name: Query Host Info
  ansible.builtin.include_tasks:
    file: host-info.yaml

- name: Lookup Installation Disks From Inventory (VMware)
  vars:
    _query: "[?boot==`true`].size_gb"
  ansible.builtin.set_fact:
    _boot_disk_size: >-
      {{
        _boot_disk_size | default([]) +
        [
          {
            'host': item,
            'size_in_bytes': (hostvars[item].disks | json_query(_query) | first) * (1024 | ansible.builtin.pow(3)) | int
          }
        ]
      }}
  loop: "{{ groups[provision_group] }}"
  when:
    - not (hostvars[item].metal_node | default(false))

- name: Lookup Installation Disks From Inventory (Metal)
  vars:
    _query: "[?boot==`true`].size_bytes"
  ansible.builtin.set_fact:
    _boot_disk_size: >-
      {{
        _boot_disk_size | default([]) +
        [
          {
            'host': item,
            'size_in_bytes': hostvars[item].disks | json_query(_query) | first
          }
        ]
      }}
  loop: "{{ groups[provision_group] }}"
  when:
    - hostvars[item].metal_node is defined
    - hostvars[item].metal_node

- name: Debug _boot_disk_size
  ansible.builtin.debug:
    var: _boot_disk_size

- name: Build Host/Disk By ID Dictionary
  vars:
    _query_eligible: "[?installation_eligibility.eligible==`true`]"
    _query_host_id: "[?host=='{{ item.host }}'].id"
    _query_inventory: "[?host=='{{ item.host }}'].inventory.disks[]"
    _query_size: "[?size_bytes==`{{ item.size_in_bytes }}`].by_id"
  ansible.builtin.set_fact:
    _boot_disks: >-
      {{
        _boot_disks | default([]) +
        [
          {
            'host': item.host,
            'id': _assisted_host_info | json_query(_query_host_id) | first,
            'disk_by_id': _assisted_host_info | json_query(_query_inventory) | json_query(_query_eligible) | json_query(_query_size) | first
          }
        ]
      }}
  loop: "{{ _boot_disk_size }}"

- name: Debug _boot_disks
  ansible.builtin.debug:
    var: _boot_disks

- name: Set Boot Disks
  ansible.builtin.uri:
    body: "{{ lookup('ansible.builtin.template', 'templates/boot-disk.j2') }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ access_token.json.access_token }}"
    method: PATCH
    status_code: 201
    url: "{{ api_infra_envs_url + infra_env_id }}/hosts/{{ item.id }}"
  loop: "{{ _boot_disks }}"
