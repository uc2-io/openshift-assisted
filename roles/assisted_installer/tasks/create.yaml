- name: Generate Access Token
  ansible.builtin.uri:
    body:
      client_id: rhsm-api
      grant_type: refresh_token
      refresh_token: "{{ offline_token }}"
    body_format: form-urlencoded
    method: POST
    url: "{{ redhat_sso_url }}"
  register: access_token

- name: Add Metal Nodes to mac_ip_dict
  ansible.builtin.set_fact:
    mac_ip_dict: >-
      {{
        mac_ip_dict +
        [
          {
            'dns': hostvars[item].dns,
            'gateway': hostvars[item].gateway,
            'interface': hostvars[item].logical_nic_name,
            'ip': hostvars[item].ip,
            'mac': hostvars[item].mac,
            'name': item
          }
        ]
      }}
  loop: "{{ groups[provision_group] }}"
  when:
    - hostvars[item].metal_node is defined
    - hostvars[item].metal_node

- name: Create "cluster" Resource
  ansible.builtin.uri:
    body:
      base_dns_domain: "{{ assisted_installer.base_dns_domain }}"
      cpu_architecture: "{{ assisted_installer.cpu_architecture }}"
      disk_encryption: "{{ assisted_installer.disk_encryption }}"
      high_availability_mode: "{{ assisted_installer.high_availability_mode }}"
      name: "{{ assisted_installer.cluster_name }}"
      openshift_version: "{{ assisted_installer.openshift_y_release }}"
      platform:
        type: "{{ assisted_installer.platform_type }}"
      pull_secret: '{{ pull_secret | from_json | to_json }}'
    body_format: json
    headers:
      Authorization: "Bearer {{ access_token.json.access_token }}"
    method: POST
    status_code: 201
    url: "{{ api_clusters_url }}"
  register: api_create_cluster_results

- name: Set cluster_id Fact
  ansible.builtin.set_fact:
    cluster_id: "{{ api_create_cluster_results.json.id }}"

- name: Debug cluster_id Fact
  ansible.builtin.debug:
    var: cluster_id

- name: Write cluster_id to Artifact Directory
  ansible.builtin.copy:
    content: "{{ cluster_id }}"
    dest: "{{ assisted_installer.artifact_directory }}/cluster-id"
    mode: "0644"

- name: Create infra-env Resource
  ansible.builtin.uri:
    body: "{{ lookup('ansible.builtin.template', 'templates/infra-envs.j2') }}"
    body_format: json
    headers:
      Authorization: "Bearer {{ access_token.json.access_token }}"
    method: POST
    status_code: 201
    url: "{{ api_infra_envs_url }}"
  register: api_create_infra_envs_results

- name: Set infra_env_id Fact
  ansible.builtin.set_fact:
    infra_env_id: "{{ api_create_infra_envs_results.json.id }}"

- name: Debug infra_env_id
  ansible.builtin.debug:
    var: infra_env_id

- name: Write infra_env_id to Artifact Directory
  ansible.builtin.copy:
    content: "{{ infra_env_id }}"
    dest: "{{ assisted_installer.artifact_directory }}/infra-env-id"
    mode: "0644"
