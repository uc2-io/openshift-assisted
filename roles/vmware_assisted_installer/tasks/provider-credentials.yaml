- name: Update vsphere-creds Secret
  kubernetes.core.k8s:
    definition: "{{ lookup('ansible.builtin.template', 'templates/vsphere-creds.j2') }}"
    force: true
    state: present

# https://issues.redhat.com/browse/OCPBUGS-23426
- name: Handle vmware-vsphere-cloud-credentials Secret Bug
  block:
    - name: Query Cluster Version
      kubernetes.core.k8s_info:
        kind: ClusterVersion
        name: version
      register: version_results

    - name: Set cluster_version Fact
      ansible.builtin.set_fact:
        cluster_version: "{{ version_results.resources[0].status.desired.version | split('.') }}"

    - name: Update vmware-vsphere-cloud-credentials Secret
      kubernetes.core.k8s:
        definition: "{{ lookup('ansible.builtin.template', 'templates/vmware-vsphere-cloud-credentials.j2') }}"
        force: true
        state: present
      when:
        - (cluster_version[1] | int < 14) or (cluster_version[1] | int == 14 and cluster_version[2] | int <= 4)

- name: Redeploy kube-controller-manager
  kubernetes.core.k8s:
    definition:
      apiVersion: operator.openshift.io/v1
      kind: KubeControllerManager
      metadata:
        name: cluster
      spec:
        forceRedeploymentReason: vsphere-creds
    state: present

- name: Update cloud-provider-config Configmap
  kubernetes.core.k8s:
    definition: "{{ lookup('ansible.builtin.template', 'templates/cloud-provider-config.j2') }}"
    state: present

- name: Query List of Nodes
  kubernetes.core.k8s_info:
    kind: Node
  register: node_results

- name: Taint Nodes with uninitialized
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        name: "{{ item.metadata.name }}"
      spec:
        taints:
          - effect: NoSchedule
            key: node.cloudprovider.kubernetes.io/uninitialized
            value: "true"
    merge_type: strategic-merge
    state: present
  loop: "{{ node_results.resources }}"

- name: Update Cluster Infrastructure Resource
  kubernetes.core.k8s:
    definition:
      apiVersion: config.openshift.io/v1
      kind: Infrastructure
      metadata:
        name: cluster
      spec:
        cloudConfig:
          key: config
          name: cloud-provider-config
        platformSpec:
          type: VSphere
          vsphere:
            failureDomains:
              - name: generated-failure-domain
                region: generated-region
                server: "{{ vcenter.hostname }}"
                topology:
                  computeCluster: "/{{ vcenter.datacenter }}/host/{{ vcenter.cluster }}"
                  datacenter: "{{ vcenter.datacenter }}"
                  datastore: "/{{ vcenter.datacenter }}/datastore/{{ vcenter.datastore }}"
                  folder: "/{{ vcenter.datacenter }}/vm/{{ vcenter.folder }}"
                  networks:
                    - "{{ vcenter.network }}"
                  resourcePool: "/{{ vcenter.datacenter }}/host/{{ vcenter.cluster }}/Resources"
                zone: generated-zone
            nodeNetworking:
              external: {}
              internal: {}
            vcenters:
              - datacenters:
                  - "{{ vcenter.datacenter }}"
                port: 443
                server: "{{ vcenter.hostname }}"
    state: present
